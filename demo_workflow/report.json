{
    "summary": {
        "directory": "/github/workspace/s3_module",
        "linted_files": 3
    },
    "linters": {
        "tflint": [],
        "tfsec": [
            {
                "Linter": "TFSec",
                "File": "main.tf",
                "Line": 38,
                "Description": "Unencrypted S3 bucket.",
                "Severity": "HIGH",
                "Context": "This high-severity issue involves the non-encryption of an S3 bucket in the terraform framework, prompting significant risks such as unauthorized data access, injection attacks or data breaches. It is integral to secure your data both in-transit and at-rest. To mitigate this, ensure that all S3 buckets are fully encrypted, not only serving the purpose of protecting data but also complying with best security practices. Implement encryption in your terraform script with the argument \"server_side_encryption_configuration\" when declaring the aws_s3_bucket resource. Enable S3 default encryption or use a bucket policy that denies any S3 Put request that doesn't include the s3:x-amz-server-side-encryption header to ensure all future objects are always encrypted.",
                "Links": [
                    "https://aquasecurity.github.io/tfsec/v1.28.11/checks/aws/s3/enable-bucket-encryption/",
                    "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#enable-default-server-side-encryption"
                ]
            },
            {
                "Linter": "TFSec",
                "File": "main.tf",
                "Line": 38,
                "Description": "S3 Bucket does not have logging enabled.",
                "Severity": "MEDIUM",
                "Context": "",
                "Links": [
                    "https://aquasecurity.github.io/tfsec/v1.28.11/checks/aws/s3/enable-bucket-logging/",
                    "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket"
                ]
            },
            {
                "Linter": "TFSec",
                "File": "main.tf",
                "Line": 38,
                "Description": "S3 Data should be versioned",
                "Severity": "MEDIUM",
                "Context": "",
                "Links": [
                    "https://aquasecurity.github.io/tfsec/v1.28.11/checks/aws/s3/enable-versioning/",
                    "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#versioning"
                ]
            },
            {
                "Linter": "TFSec",
                "File": "main.tf",
                "Line": 38,
                "Description": "S3 encryption should use Customer Managed Keys",
                "Severity": "HIGH",
                "Context": "The high-severity issue in the Terraform framework indicates that S3 encryption is currently using AWS managed keys instead of Customer Managed Keys (CMKs), which potentially weakens security as the keys are fully controlled by AWS rather than the user. This poses a risk of unauthorized data access. To resolve this, it is strongly recommended to switch the S3 encryption to use CMKs. This could be achieved by creating a new CMK through AWS Key Management Service (KMS) and then updating the Terraform scripts to ensure that all S3 buckets use this key for server-side encryption. This will enhance the security as the control of the encryption keys will be in the hands of the user.",
                "Links": [
                    "https://aquasecurity.github.io/tfsec/v1.28.11/checks/aws/s3/encryption-customer-key/",
                    "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#enable-default-server-side-encryption"
                ]
            }
        ],
        "checkov": [
            {
                "Linter": "Checkov",
                "File": "/main.tf",
                "Line": "21 - 35",
                "Description": "Ensure that EC2 is EBS optimized",
                "Severity": "MEDIUM",
                "Context": "EBS optimization refers to capacity efficiency and performance boosting in Amazon Elastic Block Store (EBS). Non-optimized EBS volumes can cause a bottleneck by sharing network bandwidth with EC2 instances, which may lead to decreased performance and inflated costs. To mitigate this, ensure all EC2 instances are configured as EBS-optimized. This can be done by setting the 'ebs_optimized' attribute to 'true' for each EC2 instance in the terraform configuration file. This enhancement will maximize I/O performance and, in turn, enhance overall system productivity and reduce costs. This setting enables dedicated network capacity for EBS volume I/O, ensuring reliable and robust performance.",
                "Links": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-that-ec2-is-ebs-optimized",
                "Additional Context": "aws_instance.example"
            },
            {
                "Linter": "Checkov",
                "File": "/main.tf",
                "Line": "21 - 35",
                "Description": "Ensure that detailed monitoring is enabled for EC2 instances",
                "Severity": "MEDIUM",
                "Context": "The problem at hand identifies that detailed monitoring is disabled for EC2 instances, which severely limits your visibility into resource utilization and system performance. Detailed monitoring collects data every minute and supports faster diagnoses of potential issues if they arise. It's especially critical in production environments where any system performance degradation could lead to significant impacts. To address this issue, enable detailed monitoring on all your EC2 instances to improve system check granularity. This can be done through Amazon CloudWatch, which provides detailed monitoring services for your AWS resources. Ensure that all existing and future EC2 instances have detailed monitoring enabled to increase visibility and, consequently, system performance.",
                "Links": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-logging-policies/ensure-that-detailed-monitoring-is-enabled-for-ec2-instances",
                "Additional Context": "aws_instance.example"
            },
            {
                "Linter": "Checkov",
                "File": "/main.tf",
                "Line": "38 - 41",
                "Description": "Ensure S3 buckets should have event notifications enabled",
                "Severity": "MEDIUM",
                "Context": "This high-severity issue outlines that S3 buckets, a scalable storage in the cloud, do not have event notifications enabled in the Terraform infrastructure. Not having notifications enabled presents a critical risk as it may lead to unnoticed changes, unauthorized access, or data breaches. To address this, it is recommended to configure event notifications on all S3 buckets. This would entail setting up a Simple Notification Service (SNS), Simple Queue Service (SQS), or AWS Lambda in the Terraform configuration to receive and react to bucket event notifications. Thus, ensuring immediate alerts whenever certain events occur, which significantly improves the security measures and allows timely response to any potential issue.",
                "Links": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-logging-policies/bc-aws-2-62",
                "Additional Context": "aws_s3_bucket.example"
            },
            {
                "Linter": "Checkov",
                "File": "/main.tf",
                "Line": "38 - 41",
                "Description": "Ensure the S3 bucket has access logging enabled",
                "Severity": "MEDIUM",
                "Context": "This high-severity issue in the Terraform framework pertains to an S3 bucket without enabled access logging. This could potentially lead to a significant security risk as it allows undetected or unauthorized access, hampering the ability to audit interactions with the bucket\u2019s data. To rectify this issue, it's advised to incorporate S3 server access logging into the Terraform code for all S3 bucket creations. This will create a record of all access requests, allowing compliance with best-practice auditing and providing an increased level of security by identifying potential malicious activity.",
                "Links": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/s3-13-enable-logging",
                "Additional Context": "aws_s3_bucket.example"
            },
            {
                "Linter": "Checkov",
                "File": "/main.tf",
                "Line": "38 - 41",
                "Description": "Ensure that S3 bucket has cross-region replication enabled",
                "Severity": "MEDIUM",
                "Context": "The issue pertains to the absence of cross-region replication for an S3 bucket in the AWS environment managed via Terraform, thereby posing a risk of data loss in the event of any regional failures or outages. To resolve this, it is recommended to enable cross-region replication for all critical S3 buckets, which will automatically copy your objects between two specified regions for data redundancy, ensuring higher data durability, availability, and timely disaster recovery. Implementing this functionality in your Terraform scripts requires the addition of the appropriate S3 bucket replication configuration block specifying the destination bucket and storage class where the data will be replicated.",
                "Links": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-that-s3-bucket-has-cross-region-replication-enabled",
                "Additional Context": "aws_s3_bucket.example"
            },
            {
                "Linter": "Checkov",
                "File": "/main.tf",
                "Line": "38 - 41",
                "Description": "Ensure that S3 buckets are encrypted with KMS by default",
                "Severity": "HIGH",
                "Context": "This high-severity issue pertains to a lack of encryption at rest for S3 buckets managed through the Terraform framework, which denotes a significant data security risk, as unauthorized individuals may potentially gain easier access to sensitive information stored within these buckets. You should address this immediately by modifying the Terraform code for S3 bucket creation to include default server-side encryption using AWS Key Management Service (KMS). Ensure that every new bucket automatically uses a KMS-managed key for encryption, while existing buckets should be audited and updated accordingly. This will significantly enhance the confidentiality and integrity of the data stored within your S3 buckets.",
                "Links": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-that-s3-buckets-are-encrypted-with-kms-by-default",
                "Additional Context": "aws_s3_bucket.example"
            },
            {
                "Linter": "Checkov",
                "File": "/main.tf",
                "Line": "38 - 41",
                "Description": "Ensure all data stored in the S3 bucket have versioning enabled",
                "Severity": "HIGH",
                "Context": "The highlighted issue indicates that the AWS S3 bucket under consideration does not have versioning enabled, which is a crucial feature for ensuring data persistence and recovery in case of accidental deletions, overwrites, or encountering potential cyber threats. Not having versioning enabled may expose your infrastructure to data losses with no way to retrieve the previous versions. To remediate, it is recommended to enable versioning on all existing S3 buckets. In Terraform, this can be implemented by including a versioning block with 'enabled = true' within the 'aws_s3_bucket' resource. For all future implementations, make sure versioning is included in the resource planning phase itself, to ensure data integrity and easy recoverability, ultimately fortifying your overall data management strategy.",
                "Links": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/s3-16-enable-versioning",
                "Additional Context": "aws_s3_bucket.example"
            },
            {
                "Linter": "Checkov",
                "File": "/main.tf",
                "Line": "21 - 35",
                "Description": "Ensure an IAM role is attached to EC2 instance",
                "Severity": "HIGH",
                "Context": "The issue at hand concerns inappropriate security protocol setup within the terraform framework. More specifically, it is about the non-compliance with a noted best practice - the attachment of an Identity and Access Management (IAM) role to the EC2 instance. Without such a role, the EC2 instance may lack the specific privileges and access control mechanisms it needs to interact securely with other services, leading to possible security vulnerabilities. To rectify this, ensure that every EC2 instance is tied to a suitable IAM role using the 'iam_instance_profile' parameter in the respective 'aws_instance' block in your terraform code. This IAM role should be configured to provide the least privileges necessary to fulfill the function of the EC2 instance, thus adhering to the principle of least privilege and enhancing overall system security.",
                "Links": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-an-iam-role-is-attached-to-ec2-instance",
                "Additional Context": "aws_instance.example"
            },
            {
                "Linter": "Checkov",
                "File": "/main.tf",
                "Line": "38 - 41",
                "Description": "Ensure that an S3 bucket has a lifecycle configuration",
                "Severity": "MEDIUM",
                "Context": "The highlighted issue pertains to the absence of a lifecycle configuration for an S3 bucket within your terraform framework, which can lead to inefficient data management and increase storage costs. A lifecycle configuration in an S3 bucket helps automate certain tasks such as migration of data to lower-cost storage classes, archival of data, or deletion of unneeded data after a specified period. To correct this, it's recommended to define a lifecycle policy for your S3 bucket in your terraform configuration file. You should determine and implement lifecycle rules that fit your data management needs, including explicit instruction for transitioning objects between storage classes and expiration of objects. By adopting this practice, you'll improve storage efficiency and reduce costs while maintaining data integrity.",
                "Links": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-logging-policies/bc-aws-2-61",
                "Additional Context": "aws_s3_bucket.example"
            },
            {
                "Linter": "Checkov",
                "File": "/main.tf",
                "Line": "16 - 18",
                "Description": "Ensure no hard coded AWS access key and secret key exists in provider",
                "Severity": "UNKNOWN",
                "Context": "PASSED",
                "Links": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/secrets-policies/bc-aws-secrets-5",
                "Additional Context": "aws.default"
            },
            {
                "Linter": "Checkov",
                "File": "/main.tf",
                "Line": "21 - 35",
                "Description": "Ensure Instance Metadata Service Version 1 is not enabled",
                "Severity": "UNKNOWN",
                "Context": "PASSED",
                "Links": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/bc-aws-general-31",
                "Additional Context": "aws_instance.example"
            },
            {
                "Linter": "Checkov",
                "File": "/main.tf",
                "Line": "21 - 35",
                "Description": "EC2 instance should not have public IP.",
                "Severity": "UNKNOWN",
                "Context": "PASSED",
                "Links": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/public-policies/public-12",
                "Additional Context": "aws_instance.example"
            },
            {
                "Linter": "Checkov",
                "File": "/main.tf",
                "Line": "21 - 35",
                "Description": "Ensure all data stored in the Launch configuration or instance Elastic Blocks Store is securely encrypted",
                "Severity": "UNKNOWN",
                "Context": "PASSED",
                "Links": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/general-13",
                "Additional Context": "aws_instance.example"
            },
            {
                "Linter": "Checkov",
                "File": "/main.tf",
                "Line": "21 - 35",
                "Description": "Ensure no hard-coded secrets exist in EC2 user data",
                "Severity": "UNKNOWN",
                "Context": "PASSED",
                "Links": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/secrets-policies/bc-aws-secrets-1",
                "Additional Context": "aws_instance.example"
            },
            {
                "Linter": "Checkov",
                "File": "/main.tf",
                "Line": "38 - 41",
                "Description": "Ensure S3 bucket policy does not lockout all but root user. (Prevent lockouts needing root account fixes)",
                "Severity": "UNKNOWN",
                "Context": "PASSED",
                "Links": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/bc-aws-s3-24",
                "Additional Context": "aws_s3_bucket.example"
            },
            {
                "Linter": "Checkov",
                "File": "/main.tf",
                "Line": "44 - 51",
                "Description": "Ensure S3 bucket has 'restrict_public_buckets' enabled",
                "Severity": "UNKNOWN",
                "Context": "PASSED",
                "Links": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/bc-aws-s3-22",
                "Additional Context": "aws_s3_bucket_public_access_block.example"
            },
            {
                "Linter": "Checkov",
                "File": "/main.tf",
                "Line": "44 - 51",
                "Description": "Ensure S3 bucket has ignore public ACLs enabled",
                "Severity": "UNKNOWN",
                "Context": "PASSED",
                "Links": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/bc-aws-s3-21",
                "Additional Context": "aws_s3_bucket_public_access_block.example"
            },
            {
                "Linter": "Checkov",
                "File": "/main.tf",
                "Line": "44 - 51",
                "Description": "Ensure S3 bucket has block public policy enabled",
                "Severity": "UNKNOWN",
                "Context": "PASSED",
                "Links": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/bc-aws-s3-20",
                "Additional Context": "aws_s3_bucket_public_access_block.example"
            },
            {
                "Linter": "Checkov",
                "File": "/main.tf",
                "Line": "44 - 51",
                "Description": "Ensure S3 bucket has block public ACLS enabled",
                "Severity": "UNKNOWN",
                "Context": "PASSED",
                "Links": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/bc-aws-s3-19",
                "Additional Context": "aws_s3_bucket_public_access_block.example"
            },
            {
                "Linter": "Checkov",
                "File": "/main.tf",
                "Line": "38 - 41",
                "Description": "S3 Bucket has an ACL defined which allows public READ access.",
                "Severity": "UNKNOWN",
                "Context": "PASSED",
                "Links": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/s3-1-acl-read-permissions-everyone",
                "Additional Context": "aws_s3_bucket.example"
            },
            {
                "Linter": "Checkov",
                "File": "/main.tf",
                "Line": "38 - 41",
                "Description": "S3 Bucket has an ACL defined which allows public WRITE access.",
                "Severity": "UNKNOWN",
                "Context": "PASSED",
                "Links": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/s3-2-acl-write-permissions-everyone",
                "Additional Context": "aws_s3_bucket.example"
            },
            {
                "Linter": "Checkov",
                "File": "/main.tf",
                "Line": "38 - 41",
                "Description": "Ensure that S3 bucket has a Public Access block",
                "Severity": "UNKNOWN",
                "Context": "PASSED",
                "Links": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/s3-bucket-should-have-public-access-blocks-defaults-to-false-if-the-public-access-block-is-not-attached",
                "Additional Context": "aws_s3_bucket.example"
            },
            {
                "Linter": "Checkov",
                "File": "/main.tf",
                "Line": "38 - 41",
                "Description": "Ensure all data stored in the S3 bucket is securely encrypted at rest",
                "Severity": "UNKNOWN",
                "Context": "PASSED",
                "Links": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/s3-14-data-encrypted-at-rest",
                "Additional Context": "aws_s3_bucket.example"
            }
        ]
    }
}